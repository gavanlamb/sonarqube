version: '3.6'
services:
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    restart: always
    depends_on:
      - database
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres152:8001/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - infrastructure
    labels:
      traefik.enable: true
      traefik.http.routers.sonarqube.rule: Host(`sonarqube.gavanlamb.com`)
      traefik.http.routers.sonarqube.entrypoints: websecure
      traefik.http.routers.sonarqube.tls.certresolver: letsencrypt
      traefik.http.routers.sonarqube.service: sonarqube_svc
      traefik.http.services.sonarqube_svc.loadBalancer.server.port: 9000
  
  
  database:
    container_name: database
    image: postgres:15.2-alpine
    environment:
      PGPASSWORD: ${PG152_PASSWORD}
      DATABASE_USERNAME: sonarqube
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: sonarqube
      PGPORT: 8001
      PGDATA: /var/lib/postgresql/data
    networks:
      - infrastructure
    entrypoint: |
      psql -h postgres152 -p 8001 -d postgres -U 'admin' << EOF 
      BEGIN
        IF EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolename = '${DATABASE_USERNAME}') THEN
           RAISE NOTICE 'Role "${DATABASE_USERNAME}" already exists. Skipping.';
        ELSE
          CREATE ROLE sonarqube WITH LOGIN INHERIT REPLICATION CONNECTION LIMIT -1 PASSWORD '${DATABASE_PASSWORD}';
        END IF;
      
        IF EXISTS (SELECT FROM pg_database WHERE datname = '${DATABASE_NAME}') THEN
           RAISE NOTICE 'Database "${DATABASE_NAME}" already exists. Skipping.';
        ELSE
          CREATE DATABASE ${DATABASE_NAME} WITH OWNER = ${DATABASE_USERNAME} ENCODING = 'UTF8' CONNECTION LIMIT = -1 IS_TEMPLATE = False;
      
          GRANT ALL ON DATABASE ${DATABASE_NAME} TO ${DATABASE_USERNAME};
        END IF;
      END
      EOF

volumes:
  sonarqube_data:
    name: sonarqube_data
  sonarqube_extensions:
    name: sonarqube_extensions
  sonarqube_logs:
    name: sonarqube_logs

networks:
  infrastructure:
    name: infrastructure
    external: true
